<?php
namespace Server;


use Handling\RequestHandler;
use Handling\ServerHandler;
use Client\Client;
use Client\ClientManager;

class MainServer extends WebSocketServer
{
    protected $port = 8888;
    protected $ip = '0.0.0.0';
    private $_server_handler = null;
    private $client = null;

    public function __construct($ip = '', $port = '')
    {
        parent::__construct($ip, $port);
        $this->_server_handler = new ServerHandler();

    }

    public function onOpen($server, $request)
    {
        $this->client = new Client($request->fd, $this);
    }

    public function onMessage($server, $frame) {
        $fd = $frame->fd;
        $this->_server_handler->hold($this->client, $frame);
    }

    public function onClose($server, $fd)
    {

    }

    public function getServer() {
        return $this->server;
    }

    public function broadcast($string) {
        foreach($this->server->connections as $fd) {
            $fdInfo = $this->server->connection_info($fd);
            if ($fdInfo['websocket_status'] == WEBSOCKET_STATUS_FRAME) {
                $this->server->push($fd, $string);
            }
        }
    }

    public function onRequest($request, $response) {

        if (strpos($request->server['request_uri'], '.ico') !== FALSE) {
            return;
        }

        $requestHandler = new RequestHandler($this->server, $request, $response);

        $requestHandler->handleRequest();

    }


    public function start()
    {
        echo "服务启动成功...\r\n监听端口:". $this->port . "\r\n";
        parent::start(); // TODO: Change the autogenerated stub
    }
}